services:
    Symplify\CodingStandard\Sniffs\Architecture\PreferredClassSniff:
        old_to_preferred_classes:
            SplFileInfo: 'Symplify\SmartFileSystem\SmartFileInfo'
            Symfony\Component\Finder\SplFileInfo: 'Symplify\SmartFileSystem\SmartFileInfo'
            DateTime: 'Nette\Utils\DateTime'
            PhpCsFixer\Finder: 'Symfony\Component\Finder\Finder'

    Symplify\CodingStandard\Fixer\Order\MethodOrderByTypeFixer:
        method_order_by_type:
            PhpCsFixer\Fixer\FixerInterface:
                - 'getDefinition'
                - 'isCandidate'
                - 'fix'
                - 'getPriority'
                - 'getName'
                - 'isRisky'
                - 'supports'

    Symplify\CodingStandard\Sniffs\Naming\ClassNameSuffixByParentSniff:
        extra_parent_types_to_suffixes:
            - 'FileDecorator'

parameters:
    sets:
        - 'php70'
        - 'php71'
        - 'clean-code'
        - 'symplify'
        - 'common'
        - 'psr12'
        - 'types'
        - 'dead-code'

    paths:
        - 'packages'

    exclude_files:
        # tests
        - 'packages/*/tests/**Source/*.php'
        - 'packages/CodingStandard/tests/Fixer/Order/MethodOrderByTypeFixer/Wrong/*'

    skip:
        # run form time to time, very slow and making many changes
        Symplify\CodingStandard\Fixer\Order\PrivateMethodOrderByUseFixer: ~
        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenStaticFunctionSniff: ~

        # types: allow mixed
        SlevomatCodingStandard\Sniffs\TypeHints\ParameterTypeHintSniff.MissingAnyTypeHint: ~
        SlevomatCodingStandard\Sniffs\TypeHints\ReturnTypeHintSniff.MissingTraversableTypeHintSpecification: ~
        SlevomatCodingStandard\Sniffs\TypeHints\ParameterTypeHintSniff.MissingTraversableTypeHintSpecification: ~
        SlevomatCodingStandard\Sniffs\TypeHints\ReturnTypeHintSniff.MissingAnyTypeHint: ~

        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff: ~

        PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer: ~
        PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer: ~

        Symplify\CodingStandard\Sniffs\ControlStructure\SprintfOverContactSniff:
            # directory separator
            - 'packages/MonorepoBuilder/tests/VersionValidator/VersionValidatorTest.php'

        Symplify\CodingStandard\Sniffs\Architecture\PreferredClassSniff:
            # allowed spots for Container
            - '*Kernel.php'
            - 'packages/PackageBuilder/src/Parameter/ParameterProvider.php'
            - 'packages/PackageBuilder/src/Parameter/ParameterTypoProofreader.php'
            - 'packages/EasyCodingStandardTester/src/Testing/AbstractCheckerTestCase.php'
            # converts non-preferred type
            - 'packages/SmartFileSystem/src/SmartFileInfo.php'
            - 'packages/SmartFileSystem/src/Finder/FinderSanitizer.php'
            - 'packages/SmartFileSystem/tests/Finder/FinderSanitizer/FinderSanitizerTest.php'
            # uses 3rd-party API
            - 'packages/PackageBuilder/src/Configuration/LevelFileFinder.php'
            - 'packages/CodingStandard/src/Fixer/*'
            - 'packages/CodingStandard/tests/Fixer/*'
            # SplFileInfo extension
            - 'packages/PHPStanExtensions/src/Symfony/Type/SplFileInfoTolerantDynamicMethodReturnTypeExtension.php'
            # tests
            - 'packages/MonorepoBuilder/tests/Package/PackageComposerJsonMergerTest.php'
            - 'packages/MonorepoBuilder/tests/Package/CombineStringsToArrayJsonMergerTest.php'

            - 'packages/SetConfigResolver/src/Finder/SetFileFinder.php'
            - 'packages/SetConfigResolver/src/SetResolver.php'

        PhpCsFixer\Fixer\PhpUnit\PhpUnitStrictFixer:
            - 'packages/EasyCodingStandard/tests/Indentation/IndentationTest.php'

        Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer:
            # name parts, not classes
            - 'packages/Autodiscovery/src/Yaml/ExplicitToAutodiscoveryConverter.php'
            - 'packages/CodingStandard/src/Sniffs/DependencyInjection/NoClassInstantiationSniff.php'
            # "Exception" is string part of the name
            - 'packages/CodingStandard/src/Sniffs/Naming/ClassNameSuffixByParentSniff.php'
            # class might not exist
            - '*packages/*/src/DependencyInjection/CompilerPass/*CompilerPass.php'
            - 'packages/PHPStanExtensions/src/Symfony/Type/ContainerGetTypeExtension.php'

        SlevomatCodingStandard\Sniffs\Exceptions\ReferenceThrowableOnlySniff.ReferencedGeneralException:
            # intentionally "Exception" value
            - 'packages/CodingStandard/src/Sniffs/Architecture/ExplicitExceptionSniff.php'

        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\AssignmentInConditionSniff.FoundInWhileCondition: ~

        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenReferenceSniff:
            # reference for reflection of method with reference
            - 'packages/PackageBuilder/src/Reflection/PrivatesCaller.php'

        Symplify\CodingStandard\Sniffs\Debug\CommentedOutCodeSniff.Found:
            # useful comments
            - 'packages/LatteToTwigConverter/src/CaseConverter/*CaseConverter.php'
            - 'packages/Statie/*/*FilterProvider.php'

        Symplify\CodingStandard\Sniffs\Architecture\DuplicatedClassShortNameSniff:
            - 'packages/MonorepoBuilder/src/Console/Command/ValidateCommand.php'
            - 'packages/PackageBuilder/src/DependencyInjection/CompilerPass/AutowireArrayParameterCompilerPass.php'
            - 'packages/AutowireArrayParameter/src/DependencyInjection/CompilerPass/AutowireArrayParameterCompilerPass.php'

        SlevomatCodingStandard\Sniffs\Variables\UnusedVariableSniff.UnusedVariable:
            # tests
            - 'packages/Statie/packages/Generator/tests/GeneratorExceptionsTest.php'

        SlevomatCodingStandard\Sniffs\TypeHints\ParameterTypeHintSniff.MissingNativeTypeHint:
            - '*Sniff.php'
            - '*YamlFileLoader.php'
            - 'packages/PackageBuilder/src/Reflection/PrivatesCaller.php'

        Symplify\CodingStandard\Fixer\Solid\FinalInterfaceFixer:
            # temporary, BC layer
            - 'packages/AutowireArrayParameter/src/DependencyInjection/CompilerPass/AutowireArrayParameterCompilerPass.php'
            - 'packages/AutoBindParameter/src/DependencyInjection/CompilerPass/AutoBindParameterCompilerPass.php'
