#!/usr/bin/env php
<?php declare(strict_types=1);

use Symfony\Component\Console\Application;
use Symplify\PackageBuilder\Configuration\ConfigFilePathHelper;
use Symplify\Statie\DependencyInjection\ContainerFactory;

// performance boost
gc_disable();

// prefer local vendor over analyzed project (e.g. for "composer create-project symplify/statie")
$possibleAutoloadPaths = [
    __DIR__ . '/../../..',
    __DIR__ . '/../vendor',
    getcwd() . '/vendor',
];

foreach ($possibleAutoloadPaths as $possibleAutoloadPath) {
    if (file_exists($possibleAutoloadPath . '/autoload.php')) {
        require_once $possibleAutoloadPath . '/autoload.php';
        break;
    }
}


// 1. Detect configuration
ConfigFilePathHelper::detectFromInput('statie');

// 2. Build DI container
$containerFactory = new ContainerFactory;
$configFilePath = ConfigFilePathHelper::provide('statie') ?: getcwd() . '/statie.neon';
$container = $containerFactory->createWithConfig($configFilePath);

// 3. Run Console Application
/** @var Application $application */
$application = $container->get(Application::class);
$application->run();
