includes:
    - ../packages/cognitive-complexity/config/cognitive-complexity-rules.neon

parameters:
    symplify:
        max_method_cognitive_complexity: 8
        max_class_cognitive_complexity: 50

services:
    # rules
    -
        class: Symplify\CodingStandard\Rules\NoMissingDirPathRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoNewOutsideFactoryRule
        tags: [phpstan.rules.rule]

    # symfony
    -
        class: Symplify\CodingStandard\Rules\NoTraitExceptItsMethodsPublicAndRequired
        tags: [phpstan.rules.rule]

    # static
    -
        class: Symplify\CodingStandard\Rules\NoStaticPropertyRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoProtectedElementInFinalClassRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoScalarAndArrayConstructorParameterRule
        tags: [phpstan.rules.rule]

    # regex
    -
        class: Symplify\CodingStandard\Rules\AnnotateRegexClassConstWithRegexLinkRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoInlineStringRegexRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\RegexSuffixInRegexConstantRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoPostIncPostDecRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoAbstactMethodRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\UppercaseConstantRule
        tags: [phpstan.rules.rule]

    # arrays
    -
        class: Symplify\CodingStandard\Rules\NoArrayStringObjectReturnRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoMultiArrayAssignRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoReturnArrayVariableList
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForbiddenArrayDestructRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForbiddenArrayWithStringKeysRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForbiddenComplexArrayConfigInSetRule
        tags: [phpstan.rules.rule]

    # doctrine-related
    -
        class: Symplify\CodingStandard\Rules\NoEntityManagerInControllerRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoGetRepositoryOutsideConstructorRule
        tags: [phpstan.rules.rule]

    # parenting
    -
        class: Symplify\CodingStandard\Rules\ForbiddenParentClassRule
        tags: [phpstan.rules.rule]
        arguments:
            forbiddenParentClasses:
                - Doctrine\ORM\EntityRepository

    -
        class: Symplify\CodingStandard\Rules\PreferredClassRule
        tags: [phpstan.rules.rule]
        arguments:
            oldToPrefferedClasses:
                SplFileInfo: 'Symplify\SmartFileSystem\SmartFileInfo'
                DateTime: 'Nette\Utils\DateTime'
                'PhpCsFixer\Finder': 'Symfony\Component\Finder\Finder'
                # smart file system
                'Symfony\Component\Finder\SplFileInfo': 'Symplify\SmartFileSystem\SmartFileInfo'
                'Nette\Utils\FileSystem': 'Symplify\SmartFileSystem\SmartFileSystem'
                'Symfony\Component\Filesystem\Filesystem': 'Symplify\SmartFileSystem\SmartFileSystem'

    -
        class: Symplify\CodingStandard\Rules\NoReferenceRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoArrayAccessOnObjectRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoClassWithStaticMethodWithoutStaticNameRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoDuplicatedShortClassNameRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForbiddenFuncCallRule
        tags: [phpstan.rules.rule]
        arguments:
            forbiddenFunctions: ['d', 'dd', 'dump', 'var_dump', 'extract']

    -
        class: Symplify\CodingStandard\Rules\ClassNameRespectsParentSuffixRule
        tags: [phpstan.rules.rule]
        arguments:
            parentClasses: []

    -
        class: Symplify\CodingStandard\Rules\BoolishClassMethodPrefixRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\MatchingTypeConstantRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForbidReturnValueOfIncludeOnceRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\SeeAnnotationToTestRule
        tags: [phpstan.rules.rule]
        arguments:
            requiredSeeTypes:
                - PHPStan\Rules\Rule
                - PHP_CodeSniffer\Sniffs\Sniff
                - PHP_CodeSniffer\Fixer

    -
        class: Symplify\CodingStandard\Rules\NoDynamicMethodNameRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoIssetOnObjectRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoEmptyRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoFunctionCallInMethodCallRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoDynamicPropertyFetchNameRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoDefaultExceptionRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\MatchingTypeConstantRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForceMethodCallArgumentConstantRule
        tags: [phpstan.rules.rule]
        arguments:
            constantArgByMethodByType: []

    -
        class: Symplify\CodingStandard\Rules\RequireStringArgumentInMethodCallRule
        tags: [phpstan.rules.rule]
        arguments:
            stringArgByMethodByType: []

    -
        class: Symplify\CodingStandard\Rules\NoStaticCallRule
        tags: [phpstan.rules.rule]
        arguments:
            allowedStaticCallClasses:
                - 'Symplify\PackageBuilder\Console\Command\CommandNaming'
                - 'PHPStan\Reflection\ParametersAcceptorSelector'
                - 'Symplify\PackageBuilder\Configuration\StaticEolConfiguration'

    -
        class: Symplify\CodingStandard\Rules\ExcessiveParameterListRule
        tags: [phpstan.rules.rule]
        arguments:
            maxParameterCount: 8

    -
        class: Symplify\CodingStandard\Rules\PrefferedStaticCallOverFuncCallRule
        tags: [phpstan.rules.rule]
        arguments:
            funcCallToPrefferedStaticCalls:
                'preg_match': ['Nette\Utils\Strings', 'match']
                'preg_match_all': ['Nette\Utils\Strings', 'matchAll']
                'preg_replace': ['Nette\Utils\Strings', 'replace']
                'preg_replace_callback': ['Nette\Utils\Strings', 'replace']
                'preg_split': ['Nette\Utils\Strings', 'split']

    -
        class: Symplify\CodingStandard\Rules\ExcessivePublicCountRule
        tags: [phpstan.rules.rule]
        arguments:
            maxPublicClassElementCount: 10

    -
        class: Symplify\CodingStandard\Rules\TooLongVariableRule
        tags: [phpstan.rules.rule]
        arguments:
            maxVariableLength: 40

    -
        class: Symplify\CodingStandard\Rules\RequireDataProviderTestMethodRule
        tags: [phpstan.rules.rule]
        arguments:
            classesRequiringDataProvider:
                - '*RuleTest'
                - Symplify\EasyCodingStandardTester\Testing\AbstractCheckerTestCase

    # services
    - Symplify\CodingStandard\PhpParser\NodeNameResolver
    - Symplify\CodingStandard\PHPStan\ParentMethodAnalyser
    - Symplify\CodingStandard\PHPStan\Types\ScalarTypeAnalyser
    - Symplify\CodingStandard\PHPStan\VariableAsParamAnalyser
    - Symplify\PackageBuilder\Matcher\ArrayStringAndFnMatcher
    - Symplify\PackageBuilder\Reflection\PrivatesAccessor
