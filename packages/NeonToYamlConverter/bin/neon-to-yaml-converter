#!/usr/bin/env php
<?php declare(strict_types=1);

use Symplify\NeonToYamlConverter\Console\NeonToYamlConverterApplication;
use Symplify\NeonToYamlConverter\HttpKernel\NeonToYamlConverterKernel;
use Symplify\PackageBuilder\Console\Input\InputDetector;

# 1. autoload
$possibleAutoloadPaths = [
    // after split package
    __DIR__ . '/../vendor/autoload.php',
    // dependency
    __DIR__ . '/../../../autoload.php',
    // monorepo
    __DIR__ . '/../../../vendor/autoload.php',
];

foreach ($possibleAutoloadPaths as $possibleAutoloadPath) {
    if (file_exists($possibleAutoloadPath)) {
        require_once $possibleAutoloadPath;

        break;
    }
}

# 2. create container
// random has is needed, so cache is invalidated and changes from config are loaded
$environment = 'prod' . random_int(1, 100000);
$neonToYamlConverterKernel = new NeonToYamlConverterKernel($environment, InputDetector::isDebug());
$neonToYamlConverterKernel->boot();
$container = $neonToYamlConverterKernel->getContainer();

# 3. run it
$application = $container->get(NeonToYamlConverterApplication::class);
exit($application->run());
