includes:
    - 'packages/PHPStanExtensions/config/config.neon'

parameters:
    level: max
    reportUnmatchedIgnoredErrors: false

    excludes_analyse:
        - *packages/MonorepoBuilder/packages/Init/templates/*
        - *packages/CodingStandard/tests/**/correct*
        - *packages/CodingStandard/tests/**/wrong*
        - *packages/CodingStandard/tests/**/Wrong*
        # tests
        - packages/PHPStanExtensions/tests/Rules/Classes/Source/ClassWithConstants.php
        - packages/EasyCodingStandard/packages/SniffRunner/tests/Application/FileProcessorSource/ReferenceUsedNamesOnlySniff/
        - packages/Statie/packages/MigratorSculpin/tests/SculpinToStatieMigrator/Source/Fixture/before/app/SculpinKernel.php
        # Symfony workaround
        - packages/ChangelogLinker/src/DependencyInjection/Dummy/ResolveAutowiringExceptionHelper.php
        # 3rd party
        - packages/EasyCodingStandard/packages/SniffRunner/src/File/File.php

    autoload_files:
        - %currentWorkingDirectory%/tests/bootstrap.php
        - packages/EasyCodingStandard/packages/ChangedFilesDetector/tests/ChangedFilesDetectorSource/OneClass.php
        - packages/EasyCodingStandard/tests/Finder/SourceFinderSource/Source/SomeClass.php

    ignoreErrors:
        - '#Cannot assign offset int to int#'

        # command argument value type conversion - known string
        -
            message: '#Cannot cast array<string>\|string\|null to string#'
            path: '*packages/*Command.php'

        # lvl 7
        - '#Parameter \#2 \$config of class PHP_CodeSniffer\\Tokenizers\\PHP constructor expects PHP_CodeSniffer\\Config\|null, PHP_CodeSniffer\\Config\|stdClass given#'
        - '#Parameter \#3 \$end of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects int\|null, bool\|int given#'

        # invalid 3rd party-code
        - '#Parameter \#1 \$index of method PhpCsFixer\\Tokenizer\\Tokens::getNextTokenOfKind\(\) expects int, int\\|null given#'
        - '#Variable \$processedFileContent might not be defined#'
        - '#Property Symplify\\CodingStandard\\TokenRunner\\Wrapper\\FixerWrapper\\FixerClassWrapper::\$startBracketIndex \(int\) does not accept int\|null#'

        # known values
        - '#Parameter \#2 \$start of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects int, (.*?) given#'
        - '#Parameter \#3 \$end of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects int\|null, int\|true given#'

        # required for autowiring, since only interface is autowired
        - '#Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getParameterBag()#'

        # buggy
        - '#Symplify\\EasyCodingStandard\\Contract\\Application\\DualRunInterface#'

        # intersect/union buggy
        - '#Parameter \#(2|3) \$items of method PhpCsFixer\\Tokenizer\\Tokens::(insertAt|overrideRange)\(\) expects (\()?iterable<PhpCsFixer\\Tokenizer\\Token>&PhpCsFixer\\Tokenizer\\Tokens(\))?(\|PhpCsFixer\\Tokenizer\\Token)?, array<(int, )?PhpCsFixer\\Tokenizer\\Token> given#'
        - '#expects Symfony\\Component\\DependencyInjection\\ContainerBuilder, Symfony\\Component\\DependencyInjection\\ContainerInterface given#'

        # phpstan 0.10 news
        - '#Cannot call method contains\(\) on array<array<string>>\|SplObjectStorage#'
        - '#Cannot call method attach\(\) on array<array<string>>\|SplObjectStorage#'
        - '#Parameter \#1 \$path of function dirname expects string, string\|false given#'
        - '#Method Symplify\\PackageBuilder\\Console\\Command\\CommandNaming::getShortClassName\(\) should return string but returns string\|null#'
        - '#Cannot access offset (.*?) on Symplify\\Statie\\Generator\\Renderable\\File\\AbstractGeneratorFile#'
        - '#Parameter \#1 \$stack of function array_pop expects array, array<int, string>\|false given#'
        - '#Cannot call method getStart\(\) on Symplify\\CodingStandard\\TokenRunner\\Analyzer\\FixerAnalyzer\\BlockInfo\|null#'
        - '#Method Symplify\\CodingStandard\\TokenRunner\\Analyzer\\SnifferAnalyzer\\CognitiveComplexityAnalyzer::getMeasuredNestingLevel\(\) should return int but returns float\|int#'

        # variadic
        - '#PHPDoc tag \@param for parameter (.*?) with type array is not subtype of native type array<int, mixed>#'

        # mixed up iterables
        - '#PHPDoc tag @return with type array<string\> is incompatible with native type Iterator#'

        # Symfony 4.2 typehint BC-break
        - '#Parameter \#1 \$command of class Symfony\\Component\\Process\\Process constructor expects array, array<string>\|string given#'

        # false positive, known
        - '#Cannot cast array<string>\|bool\|string\|null to string#'
        - '#Cannot cast array<string>\|bool\|string\|null to int#'

        # console argument/option
        - '#Cannot cast array<string\>\|bool\|string to string#'

        # known values
        - '#Parameter \#1 \$code of static method PhpCsFixer\\Tokenizer\\Tokens\:\:fromCode\(\) expects string, string\|false given#'
        - '#Cannot call method (get|has)\(\) on (.*?)\|null#'
        - '#Static property Symplify\\PackageBuilder\\Tests\\AbstractKernelTestCase\:\:\$container \(Psr\\Container\\ContainerInterface\) does not accept object\|null#'
        - '#Call to an undefined method Psr\\Container\\ContainerInterface\:\:set\(\)#'
        - '#Static property Symplify\\PackageBuilder\\Tests\\AbstractKernelTestCase\:\:\$container \(Psr\\Container\\ContainerInterface\) does not accept null#'

        # false positive
        - '#Unreachable statement \- code above always terminates#'
        - '#Property Symplify\\Autodiscovery\\Tests\\Twig\\TwigPathAutodiscoveryTest\:\:\$twigFilesystemLoader \(Twig\\Loader\\FilesystemLoader\) does not accept Twig\\Loader\\LoaderInterface#'

        # magic properties
        - '#Access to an undefined property PHP_CodeSniffer\\Config\:\:(.*?)#'

        # false positive
        - '#Cannot assign offset \(int\|string\) to PhpCsFixer\\Tokenizer\\Tokens#'
        - '#Parameter \#1 \$subject of static method Nette\\Utils\\Strings\:\:match\(\) expects string, string\|false given#'
        - '#Parameter \#1 \$tokens of method Symplify\\CodingStandard\\Fixer\\Naming\\CatchExceptionNameMatchingTypeFixer\:\:updateCatchBodyVariableName\(\) expects PhpCsFixer\\Tokenizer\\Tokens, array<int\|string, PhpCsFixer\\Tokenizer\\Token\> given#'

        # yield iterator
        - '#Return type \(Iterator\) of method Symplify\\Statie\\Twig\\(.*?)\:\:(.*?)\(\) should be compatible with return type \(array<Twig\\(.*?)\>\) of method Twig\\Extension\\(.*?)\(\)#'
        - '#PHPDoc tag @return with type array<Twig\\TwigFunction\> is incompatible with native type Iterator#'
        - '#PHPDoc tag @return with type array<Twig\\TwigFilter\> is incompatible with native type Iterator#'

        - '#Parameter \#1 \$filename of function filesize expects string, string\|false given#'
        - '#Method Symplify\\SetConfigResolver\\Finder\\SetFileFinder\:\:detectFromInputAndDirectory\(\) should return string\|null but return statement is missing#'
        - '#Parameter \#1 \$unversionedSets of method Symplify\\SetConfigResolver\\SetResolver\:\:createSetListInString\(\) expects array<string\>, array<array<string\>\|string\> given#'
        - '#Parameter \#2 \$versionedSets of method Symplify\\SetConfigResolver\\SetResolver\:\:createSetListInString\(\) expects array<array<string\>\>, array<array<string\>\|string\> given#'
        - '#Parameter \#1 \$files of method Symplify\\SmartFileSystem\\Finder\\FinderSanitizer\:\:sanitize\(\) expects \(iterable<SplFileInfo\|string\>&Nette\\Utils\\Finder\)\|Symfony\\Component\\Finder\\Finder, array<int, string\> given#'
        - '#Parameter \#1 \$files of method Symplify\\SmartFileSystem\\Finder\\FinderSanitizer\:\:sanitize\(\) expects \(iterable<SplFileInfo\|string\>&Nette\\Utils\\Finder\)\|Symfony\\Component\\Finder\\Finder, array<int, SplFileInfo\> given#'
        - '#Parameter \#2 \$filesToImport of method Symplify\\Statie\\Migrator\\Worker\\StatieImportsAdder\:\:addImportSection\(\) expects array<string\>, array<array<string, string\>\|string\> given#'
        - '#Cannot access offset int on int#'
        - '#Class Symplify\\PHPStanExtensions\\Rules\\Classes\\MatchingTypeConstantRule implements generic interface PHPStan\\Rules\\Rule but does not specify its types\: TNodeType#'
        - '#Class Symplify\\PHPStanExtensions\\Tests\\Rules\\Classes\\MatchingTypeConstantRuleTest extends generic class PHPStan\\Testing\\RuleTestCase but does not specify its types\: TRule#'
        - '#Call to an undefined method ReflectionType\:\:getName\(\)#'
        - '#Parameter \#1 \$argument of class ReflectionClass constructor expects class\-string<T of object\>\|T of object, string given#'
        - '#PHPDoc tag @var for variable \$reflectionClass contains generic class ReflectionClass but does not specify its types\: T#'

        # helps ide
        - '#Class Symplify\\Statie\\Renderable\\File\\PostFile implements generic interface ArrayAccess but does not specify its types\: TKey, TValue#'
        - '#Method Symplify\\CodingStandard\\TokenRunner\\Tests\\Analyzer\\SniffAnalyzer\\CognitiveComplexityAnalyzer\\CognitiveComplexityAnalyzerTest\:\:getLegacyConfig\(\) never returns PHP_CodeSniffer\\Config so it can be removed from the return typehint#'

        # mixed by default, handled by coding standards
        - '#(has|with) no (return )?typehint specified#'
        - '#Offset (.*?) does not exist on array\|null#'
        - '#in iterable type#'
        - '#Method Symplify\\PHPStanExtensions\\Tests\\Rules\\Classes\\MatchingTypeConstantRuleTest\:\:getRule\(\) return type with generic interface PHPStan\\Rules\\Rule does not specify its types\: TNodeType#'
        - '#Class Symplify\\PHPStanExtensions\\Rules\\ClassMethod\\BoolishClassMethodPrefixRule implements generic interface PHPStan\\Rules\\Rule but does not specify its types\: TNodeType#'
