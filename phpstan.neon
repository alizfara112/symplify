includes:
    - packages/phpstan-extensions/config/config.neon
    - packages/phpstan-rules/config/symplify-rules.neon
    # for cognitive rules
    - packages/phpstan-rules/packages/cognitive-complexity/config/cognitive-complexity-services.neon
    - packages/phpstan-rules/config/services/services.neon

services:
    -
        class: Symplify\PHPStanRules\Rules\IfImplementsInterfaceThenNewTypeRule
        tags: [phpstan.rules.rule]
        arguments:
            newTypesByInterface:
                Symplify\RuleDocGenerator\Contract\ConfigurableRuleInterface: Symplify\RuleDocGenerator\ValueObject\CodeSample\ConfiguredCodeSample

    -
        class: Symplify\PHPStanRules\Rules\IfNewTypeThenImplementInterfaceRule
        tags: [phpstan.rules.rule]
        arguments:
            interfacesByNewTypes:
                Symplify\RuleDocGenerator\ValueObject\CodeSample\ConfiguredCodeSample: Symplify\RuleDocGenerator\Contract\ConfigurableRuleInterface

    # cognitive complexity
    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\FunctionLikeCognitiveComplexityRule
        tags: [phpstan.rules.rule]
        arguments:
            maxMethodCognitiveComplexity: 8

    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\ClassLikeCognitiveComplexityRule
        tags: [phpstan.rules.rule]
        arguments:
            maxClassCognitiveComplexity: 25
            limitsByTypes:
                PHPStan\Rules\Rule: 16
                Symplify\CodingStandard\Fixer\AbstractSymplifyFixer: 16

parameters:
    level: max
    reportUnmatchedIgnoredErrors: false

    parallel:
        # to prevent full thread lagging pc
        maximumNumberOfProcesses: 15

    paths:
        - packages
        - ecs.php
        - rector.php

    excludes_analyse:
        - */scoper.php
        - *scoper.inc.php

        # WIP parallel
        - packages/easy-coding-standard/packages/Parallel
        - packages/easy-coding-standard/src/Console/Command/WorkerCommand.php

        - packages/easy-coding-standard/build/target-repository/bootstrap.php
        - packages/easy-coding-standard/build/build-preload.php
        # there is some bug
        - packages/package-builder/src/Testing/AbstractKernelTestCase.php
        - packages/package-builder/src/Console/Command/AbstractSymplifyCommand.php

        # PHP 8 only
        - packages/phpstan-rules/tests/Rules/ForbiddenArrayWithStringKeysRule/FixturePhp80/SkipAttributeArrayKey.php
        - packages/autowire-array-parameter/tests/SourcePhp8/PromotedPropertyCollector.php
        - packages/autowire-array-parameter/tests/DependencyInjection/CompilerPass/Php8Test.php

        - packages/phpstan-rules/tests/Rules/NoParentMethodCallOnEmptyStatementInParentMethodRule/FixturePhp80/SkipPromotedParentProperty.php

        # functions false positive
        - *packages/**/tests/**/config.php
        - *packages/**/tests/**-config.php
        - *packages/monorepo-builder/templates/*
        - *packages/coding-standard/tests/**/correct*
        - *packages/coding-standard/tests/**/wrong*
        - *packages/coding-standard/tests/**/Wrong*
        - *packages/phpstan-extensions/**/Source/**
        # tests
        - packages/easy-coding-standard/packages/SniffRunner/Application/FileProcessorSource/ReferenceUsedNamesOnlySniff/
        - packages/symfony-static-dumper/tests/test_project/

        # 3rd party
        - packages/easy-coding-standard/packages/SniffRunner/ValueObject/File.php
        - packages/package-builder/src/Yaml/ParametersMerger.php

        # tests
        - packages/phpstan-extensions/tests/Rules/ClassMethod/Source/*

        # requires PHP 7.4
        - 'packages/easy-hydrator/tests/Fixture/TypedProperty.php'
        - 'packages/easy-hydrator/tests/TypedPropertiesTest.php'
        - '*/Source/*'
        - '*/Fixture/*'
        - */vendor/*
        - */stubs/*
        - packages/vendor-patches/tests/Finder/VendorFilesFinderSource/Vendor/some/package/src/PackageClass.php
        - packages/phpstan-rules/tests/Rules/AllowedExclusiveDependencyRule/FixturePhp74/*

        # requireds PHP 8
        - packages/phpstan-rules/tests/Rules/TooDeepNewClassNestingRule/FixturePhp8/SkipExpressionThrow.php
        - packages/phpstan-rules/tests/Rules/ForbiddenArrayWithStringKeysRule/FixturePhp80/SkipAttributeArrayKey.php

    bootstrapFiles:
        - tests/bootstrap.php

    ignoreErrors:
        # invalid 3rd party-code
        - '#Parameter \#1 \$index of method PhpCsFixer\\Tokenizer\\Tokens::getNextTokenOfKind\(\) expects int, int\|null given#'

        # required for autowiring, since only interface is autowired
        - '#Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getParameterBag\(\)#'

        # intersect/union buggy
        - '#expects Symfony\\Component\\DependencyInjection\\ContainerBuilder, Symfony\\Component\\DependencyInjection\\ContainerInterface given#'

        # phpstan 0.10 news
        - '#Parameter \#1 \$path of function dirname expects string, string\|false given#'

        # Symfony 4.2 typehint BC-break
        - '#Parameter \#1 \$command of class Symfony\\Component\\Process\\Process constructor expects array, array<string>\|string given#'

        # false positive
        - '#Cannot assign offset \(int\|string\) to PhpCsFixer\\Tokenizer\\Tokens#'

        - '#Call to an undefined method ReflectionType\:\:getName\(\)#'

        - '#Access to an undefined property PhpParser\\Node\\Expr\\Error(.*?)#'

        - '#Cannot call method (.*?) on PhpCsFixer\\Tokenizer\\Token\|null#'

        - '#Parameter \#1 \$endPath of method Symfony\\Component\\Filesystem\\Filesystem\:\:makePathRelative\(\) expects string, string\|false given#'

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                - packages/php-config-printer/src/Printer/SmartPhpConfigPrinter.php
                # Symfony API
                - packages/rule-doc-generator/src/RuleCodeSamplePrinter/PHPStanRuleCodeSamplePrinter.php # 71
                - packages/vendor-patches/src/Composer/ComposerPatchesConfigurationUpdater.php
                - packages/easy-testing/src/MissplacedSkipPrefixResolver.php #23

        -
            message: '#Use value object over return of values#'
            paths:
                # Symfony API
                - packages/easy-coding-standard/src/Console/Output/JsonOutputFormatter.php
                - packages/config-transformer/src/Configuration/Configuration.php

        -
             message: '#Instead of "SplFileInfo" class/interface use "Symplify\\SmartFileSystem\\SmartFileInfo"#'
             paths:
                 - packages/smart-file-system/src/Finder/FinderSanitizer.php
                 - packages/smart-file-system/tests/Finder/FinderSanitizer/FinderSanitizerTest.php

        -
            message: '#Do not use static property#'
            paths:
                - packages/easy-testing/src/StaticFixtureSplitter.php # 19

        - '#Method Symplify(.*?)provide(.*?) return type has no value type specified in iterable type Iterator#'

        -
            message: '#Do not use trait#'
            paths:
                - packages/easy-testing/src/PHPUnit/Behavior/DirectoryAssertableTrait.php # 18

        -
            message: '#Do not call parent method if parent method is empty#'
            paths:
                - packages/smart-file-system/src/SmartFileInfo.php # 122

        -
           message: '#Use explicit return value over magic &reference#'
           paths:
               - packages/package-builder/src/Reflection/PrivatesCaller.php # 40

        -
            message: '#Instead of container injection, use specific service#'
            paths:
                 - packages/package-builder/src/Parameter/ParameterProvider.php # 26

        -
            message: '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'
            paths:
                - packages/package-builder/src/Parameter/ParameterProvider.php # 26
                - packages/phpstan-rules/src/Rules/CheckClassNamespaceFollowPsr4Rule.php #31

        # use rector rule for this
        - '#"@file_get_contents\(\$filename\)" is forbidden to use#'

        # child type
        - '#Parameter \#1 \$node of method Symplify\\PHPStanRules\\Rules\\ForbiddenSpreadOperatorRule\:\:hasVariadicParam\(\) expects PhpParser\\Node\\Expr\\ArrowFunction\|PhpParser\\Node\\Expr\\Closure\|PhpParser\\Node\\Stmt\\ClassMethod\|PhpParser\\Node\\Stmt\\Function_, PhpParser\\Node\\Expr\\ArrowFunction\|PhpParser\\Node\\Expr\\Closure\|\(PhpParser\\Node\\Expr\\FuncCall&PhpParser\\Node\\FunctionLike\)\|\(PhpParser\\Node\\Expr\\MethodCall&PhpParser\\Node\\FunctionLike\)\|\(PhpParser\\Node\\Expr\\StaticCall&PhpParser\\Node\\FunctionLike\)\|PhpParser\\Node\\Stmt\\ClassMethod\|PhpParser\\Node\\Stmt\\Function_ given#'

        -
            message: '#Use another value object over array with string\-keys and objects, array<string, ValueObject\>#'
            paths:
                - packages/easy-testing/src/PHPUnit/Behavior/DirectoryAssertableTrait.php # 91

        # nesting
        - '#Parameter \#1 \$items of class PhpParser\\Node\\Expr\\Array_ constructor expects array<PhpParser\\Node\\Expr\\ArrayItem\|null\>, array<PhpParser\\Node\\Arg\> given#'

        -
            message: '#Instead of "SplFileInfo" class/interface use "Symplify\\SmartFileSystem\\SmartFileInfo"#'
            path: packages/easy-ci/src/Finder/SrcTestsDirectoriesFinder.php

        # skipped tests
        - '#Method Symplify\\Skipper\\SkipCriteriaResolver\\SkippedClassAndCodesResolver\:\:resolve\(\) should return array<string, array<string\>\|null\> but returns array<int\|string, mixed\>#'

        -
            message: '#Array destruct is not allowed\. Use value object to pass data instead#'
            path: 'packages/smart-file-system/src/Normalizer/PathNormalizer.php'

        - '#Parameter (.*?) class ReflectionClass constructor expects class\-string<T of object\>\|T of object, string given#'

        -
            message: '#"%s" in sprintf\(\) format must be quoted#'
            paths:
                - packages/latte-to-twig-converter/src/CaseConverter/LoopsCaseConverter.php

        -
            message: '#Function "method_exists\(\)" cannot be used/left in the code#'
            paths:
                - packages/monorepo-builder/packages/Release/Process/ProcessRunner.php
                # PHPUnit 9/10 compat
                - packages/symfony-static-dumper/tests/FileSystem/AssetsCopierTest.php
                # existing method call validator
                - packages/easy-ci/src/Latte/Analyzer/MissingClassStaticCallLatteAnalyzer.php
                # look for parent method
                - packages/phpstan-rules/src/Rules/PreventParentMethodVisibilityOverrideRule.php

        -
            message: '#Function "property_exists\(\)" cannot be used/left in the code#'
            paths:
                - packages/astral/src/NodeNameResolver/ClassLikeNodeNameResolver.php
                # PHP compat
                - packages/package-builder/src/Reflection/PrivatesAccessor.php

        -
            message: '#Anonymous class is not allowed#'
            paths:
                 - packages/astral/src/NodeTraverser/SimpleCallableNodeTraverser.php #35

        # the file must start with "Abstract" to be correct
        -
            message: '#Skipped tested file must start with "Skip" prefix#'
            paths:
                 - packages/phpstan-rules/tests/Rules/PrefixAbstractClassRule/PrefixAbstractClassRuleTest.php
                 - packages/phpstan-rules/tests/Rules/RequiredAbstractClassKeywordRule/RequiredAbstractClassKeywordRuleTest.php

        - '#Method Symplify\\PHPStanRules\\NodeFinder\\MethodCallNodeFinder\:\:findUsages\(\) should return array<PhpParser\\Node\\Expr\\MethodCall\> but returns array<PhpParser\\Node\>#'

        # manually constructored for Symfony compiler pass, before DI is created
        - '#Method Symplify\\PHPStanRules\\NodeFinder\\MethodCallNodeFinder\:\:findByName\(\) should return array<PhpParser\\Node\\Expr\\MethodCall\> but returns array<PhpParser\\Node\>#'

        -
            message: '#\$this as argument is not allowed#'
            paths:
                - packages/easy-hydrator/src/ClassConstructorValuesResolver.php #44

        # required complexity, as get/set methods for API of composer.json
        - '#Cognitive complexity for "Symplify\\ComposerJsonManipulator\\ComposerJsonFactory\:\:createFromArray\(\)" is \d+, keep it under 8#'

        - '#\$this as argument is not allowed\. Refactor method to service composition#'
        -
            message: '#Class cognitive complexity is \d+, keep it under 25#'
            paths:
                 - packages/git-wrapper/src/GitWorkingCopy.php
                 # traversing is complex operatoin
                 - packages/simple-php-doc-parser/src/PhpDocNodeTraverser.php
                 - packages/php-config-printer/src/NodeFactory/ArgsNodeFactory.php

        -
            message: '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'
            paths:
                # manually created value objects mostly
                - packages/git-wrapper/src/*

        -
            message: '#Method name should be different to its parameter name, in a verb form#'
            paths:
                - packages/git-wrapper/src/GitWrapper.php
                - packages/git-wrapper/src/GitCommand.php

        -
            message: '#Do not use setter on a service#'
            paths:
                # manually created value objects mostly
                - packages/git-wrapper/src/*

        -
            message: '#Spread operator is not allowed#'
            paths:
                - packages/git-wrapper/src

        - '#Method "needsMerge\(\)" returns bool type, so the name should start with is/has/was#'

        -
            message: '#Use value object over multi array assign#'
            paths:
                - packages/git-wrapper/src/GitWorkingCopy.php

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                - packages/git-wrapper/src/GitWorkingCopy.php
                - packages/git-wrapper/src/EventSubscriber/GitLoggerEventSubscriber.php

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                - packages/git-wrapper/src/GitBranches.php

        -
            message: '#Use explicit names over dynamic ones#'
            paths:
                - packages/git-wrapper/src/EventSubscriber/GitLoggerEventSubscriber.php

        # third party package
        -
             message: '#Parameter "(.*?)" cannot be nullable#'
             paths:
                 - packages/git-wrapper/src
                 - packages/git-wrapper/tests


        - '#Parameter "outputFileInfo" cannot be nullable#'

        - '#Method Symplify\\PHPStanRules\\Rules\\RequireStringRegexMatchKeyRule\:\:findVariableArrayDimFetches\(\) should return array<PhpParser\\Node\\Expr\\ArrayDimFetch\> but returns array<PhpParser\\Node\>#'
        - '#Property Symplify\\PHPStanRules\\Rules\\NoInheritanceRule\:\:\$allowedParentTypes \(array<class\-string\>\) does not accept array<string\>#'

        -
            message: '#Do not inherit from abstract class, better use composition#'
            paths:
                - packages/git-wrapper/src

        # needed as `humbug/php-scoper` provides `Isolated\Symfony\Component\Finder\Finder`
        - '#Method Symplify\\EasyCI\\ContentAnalyzer\\ClassExtractor\:\:extractClassName\(\) should return class\-string but returns string#'

        # some phpstan bug
        - '#(Method|Property) (.*?) iterable type Symfony\\Component\\Process\\Process#'

        - '#Method Symplify\\EasyTesting\\DataProvider\\StaticFixtureFinder\:\:yieldDirectoryExclusively\(\) should return Iterator<mixed, Symplify\\SmartFileSystem\\SmartFileInfo\> but returns Iterator<mixed, array<int, Symplify\\SmartFileSystem\\SmartFileInfo\>\>#'

        # xml magic
        -
            message: '#Unreachable statement \- code above always terminates#'
            paths:
                - packages/easy-coding-standard/bin/ecs.php

        # resolve later
        - '#Method (.*?) with no value type specified in iterable type array#'
        # resolve first
        - '#Method (.*?) has parameter (.*?) with no typehint specified#'

        # wrong keys
        - '#Generator expects value type array<array<int\|string\>\|string\>, array<int, array<int, array<int, int\|string\>\>\|string\> given#'
        -
            message: '#Generator expects value type (.*?), array<int, array<int, array<int, int\|string\>\>\|string\> given#'
            paths:
                -  packages/phpstan-rules/tests/Rules


        - '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'

        -
             message: '#Do not compare call directly, use a variable assign#'
             paths:
                 - packages/easy-ci/src/Git/ConflictResolver.php

        # known types
        - '#Method Symplify\\Astral\\NodeFinder\\SimpleNodeFinder\:\:findByType\(\) should return array<T of PhpParser\\Node\> but returns array<PhpParser\\Node\>#'
        - '#Method Symplify\\Astral\\NodeFinder\\SimpleNodeFinder\:\:findFirstParentByType\(\) should return T of PhpParser\\Node\|null but returns class\-string<T of PhpParser\\Node\>\|T of PhpParser\\Node#'

        - '#Property Symplify\\PHPStanRules\\ObjectCalisthenics\\Rules\\NoChainMethodCallRule\:\:\$allowedChainTypes \(array<class\-string\>\) does not accept array<string\>#'

        # node traverser magic
        -
            message: '#Use explicit return value over magic &reference#'
            path: packages/simple-php-doc-parser/src/PhpDocNodeTraverser.php

        -
            message: '#Use void instead of modify and return self object#'
            path: packages/simple-php-doc-parser/src/PhpDocNodeTraverser.php

        -
            message: '#Use explicit names over dynamic ones#'
            path: packages/simple-php-doc-parser/src/PhpDocNodeTraverser.php

        -
            message:  '#Use separate function calls with readable variable names#'
            path: packages/simple-php-doc-parser/src/PhpDocNodeTraverser.php

        -
            message: '#Parameter "docContent" cannot be nullable#'
            paths:
                 - packages/simple-php-doc-parser/src/PhpDocNodeVisitor/CallablePhpDocNodeVisitor.php

        # return type is uknonw, php type is good enough
        -
            message: '#Method Symplify\\EasyHydrator\\TypeCaster\\ArrayTypeCaster\:\:retype\(\) return type has no value type specified in iterable type array#'
            paths:
                - packages/easy-hydrator/src/TypeCaster/ArrayTypeCaster.php

        - '#\$reflectionClass with generic class ReflectionClass but does not specify its types\: T#'

        # some bug
        - '#Method Symplify\\PHPStanRules\\Tests\\Rules\\ForbiddenNodeRule\\ForbiddenNodeRuleTest\:\:getRule\(\) return type with generic class Symplify\\PHPStanRules\\Rules\\ForbiddenNodeRule does not specify its types\: T#'


        -
            message:  '#Use local named constant instead of inline string for regex to explain meaning by constant name#'
            path: packages/easy-coding-standard/scoper.php

        -
            message: '#Instead of "DateTime" class/interface use "Nette\\Utils\\DateTime"#'
            path: packages/easy-coding-standard/scoper.php

        # Symfony 5.3 news
        -
            message: '#Removing parent param type is forbidden#'
            path: *FileLoader.php

        -
            message:  '#Use "Symplify\\SmartFileSystem\\SmartFileSystem\:\:dumpFile\(\)" static call over "file_put_contents\(\)" func call#'
            path: packages/easy-coding-standard/build/build-preload.php

        # this class is used by scoper, so better use less external deps
        -
            message: '#Instead of "DateTime" class/interface use "Nette\\Utils\\DateTime"#'
            path: packages/easy-coding-standard/src/Application/Version/VersionResolver.php

        -
            message: '#Nested foreach with empty statement is not allowed#'
            path: packages/php-config-printer/src/PhpParser/NodeFactory/ConfiguratorClosureNodeFactory.php

        - '#Method "processTokensByFixer\(\)" returns bool type, so the name should start with is/has/was#'

        -
            message: '#Class cognitive complexity is \d+, keep it under 25#'
            path: packages/php-config-printer/src/PhpParser/NodeFactory/ConfiguratorClosureNodeFactory.php

        # symfony 5.3 news
        -
            message: '#Method parameters must be compatible with its parent#'
            path: packages/config-transformer/src/DependencyInjection/Loader/IdAwareXmlFileLoader.php

        - '#"@var_export\(new \\Symplify\\EasyCodingStandard\\Caching\\ValueObject\\CacheItem\(\$variableKey, \$data\), true\)" is forbidden to use#'

        # reoslve later
        - '#Class with base "(.*?)" name is already used in "Symplify\\(.*?)", "Symplify\\(.*?). Use unique name to make classes easy to recognize#'

        -
            message: '#Class cognitive complexity is \d+, keep it under 25#'
            paths:
                - packages/composer-json-manipulator/src/ValueObject/ComposerJson.php

        - '#Use required typed property over of nullable property#'

        -
            message: '#Cannot call method (.*?) on PHPStan\\Command\\Output\|null#'
            path: packages/phpstan-extensions/src/ErrorFormatter/SymplifyErrorFormatter.php

        - '#Parameter \#1 \$container of method Symplify\\EasyCodingStandard\\Tests\\Indentation\\IndentationTest\:\:getIndentationTypeFixerFromContainer\(\) expects Psr\\Container\\ContainerInterface, Symfony\\Component\\DependencyInjection\\ContainerInterface\|null given#'

        -
            message: '#Strict comparison using \!\=\= between null and null will always evaluate to false#'
            path: packages/psr4-switcher/src/Utils/SymplifyStrings.php

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            path: packages/easy-coding-standard/packages/SnippetFormatter/Application/SnippetFormatterApplication.php

        -
            message: '#Parameter "config" cannot be nullable#'
            path: packages/easy-coding-standard/src/ValueObject/Configuration.php

        # array_merge() class-string[]
        - '#Property Symplify\\PHPStanRules\\Rules\\ClassNameRespectsParentSuffixRule\:\:\$parentClasses \(array<class\-string\>\) does not accept array<string\>#'

        # this can change on downgrade build
        - "#'@package_version@' and '@package_version@' will always evaluate to false#"

        -
            message: '#Unreachable statement \- code above always terminates#'
            path: packages/easy-coding-standard/src/DependencyInjection/EasyCodingStandardContainerFactory.php

        # optional parameter in value object
        -
            message: '#Parameter "message" cannot be nullable#'
            path: packages/*/src/ValueObject/*

        -
            message: '#Cognitive complexity for "Symplify\\SimplePhpDocParser\\PhpDocNodeTraverser\:\:(.*?)\(\)" is \d+, keep it under \d+#'
            path: packages/simple-php-doc-parser/src/PhpDocNodeTraverser.php

        # wrong php-cs-fixer doc types
        - '#Parameter \#1 \$type of method PhpCsFixer\\Doctrine\\Annotation\\Tokens\:\:getNextTokenOfType\(\) expects array<string\>\|string, int given#'

        # config for rector.php
        -
            message: '#For complex configuration use value object over array#'
            path: packages/*/build/config/config-downgrade.php

        # command cast of string
        -
            message: '#Cannot cast array\|bool\|float\|int\|string\|null to string#'
            path: packages/symfony-static-dumper/src/Command/DumpStaticSiteCommand.php

        - '#Cognitive complexity for "Symplify\\PhpConfigPrinter\\NodeFactory\\ArgsNodeFactory\:\:createFromValues\(\)" is 13, keep it under 8#'

        -
            message: '#Method "isSymfonyMicroKernelRequired\(\)" only calling another method call and has no added value\. Use the inlined call instead#'
            path: packages/phpstan-rules/src/Rules/NoProtectedElementInFinalClassRule.php

        - '#Call to an undefined method MyCLabs\\Enum\\Enum\:\:getKey\(\)#'

        - '#Method Symplify\\EasyCodingStandard\\FixerRunner\\Parser\\FileToTokensParser\:\:parseFromFilePath\(\) should return iterable<PhpCsFixer\\Tokenizer\\Token\>&PhpCsFixer\\Tokenizer\\Tokens but returns PhpCsFixer\\Tokenizer\\Tokens#'
        - '#Method Symplify\\CodingStandard\\TokenRunner\\Traverser\\ArrayBlockInfoFinder\:\:reverseTokens\(\) should return array<PhpCsFixer\\Tokenizer\\Token\> but returns array<int, PhpCsFixer\\Tokenizer\\Token\|null\>#'
