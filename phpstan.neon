includes:
    - vendor/phpstan/phpstan/conf/bleedingEdge.neon
    - packages/phpstan-extensions/config/config.neon
    - packages/coding-standard/config/symplify-rules.neon
    - vendor/slam/phpstan-extensions/conf/slam-rules.neon
    - vendor/slam/phpstan-extensions/conf/symfony-rules.neon
    # @todo resolve when in good mood :)
    # - packages/coding-standard/config/symplify-strict-rules.neon

services:
    -
         class: Ergebnis\PHPStan\Rules\Classes\PHPUnit\Framework\TestCaseWithSuffixRule
         tags:
                 - phpstan.rules.rule

parameters:
    symplify:
        old_to_preffered_classes:
            SplFileInfo: 'Symplify\SmartFileSystem\SmartFileInfo'
            DateTime: 'Nette\Utils\DateTime'
            'PhpCsFixer\Finder': 'Symfony\Component\Finder\Finder'
            # smart file system
            'Symfony\Component\Finder\SplFileInfo': 'Symplify\SmartFileSystem\SmartFileInfo'
            'Nette\Utils\FileSystem': 'Symplify\SmartFileSystem\SmartFileSystem'
            'Symfony\Component\Filesystem\Filesystem': 'Symplify\SmartFileSystem\SmartFileSystem'

        max_parameter_count: 8

        required_see_types:
            - PHPStan\Rules\Rule
            - PHP_CodeSniffer\Sniffs\Sniff
            - PHP_CodeSniffer\Fixer

        # for \Symplify\CodingStandard\Rules\NoStaticCallRule
        allowed_static_call_classes:
            - 'Symplify\PackageBuilder\Console\Command\CommandNaming'
            - 'PHPStan\Reflection\ParametersAcceptorSelector'
            - 'Symplify\PackageBuilder\Configuration\StaticEolConfiguration'

    level: max
    checkGenericClassInNonGenericObjectType: false

    paths:
        - packages

    reportUnmatchedIgnoredErrors: false

    excludes_analyse:
        - *packages/monorepo-builder/packages/init/templates/*
        - *packages/coding-standard/tests/**/correct*
        - *packages/coding-standard/tests/**/wrong*
        - *packages/coding-standard/tests/**/Wrong*
        - *packages/phpstan-extensions/**/Source/**
        # tests
        - packages/easy-coding-standard/packages/sniff-runner/tests/Application/FileProcessorSource/ReferenceUsedNamesOnlySniff/
        # Symfony workaround
        - packages/changelog-linker/src/DependencyInjection/Dummy/ResolveAutowiringExceptionHelper.php
        # 3rd party
        - packages/easy-coding-standard/packages/sniff-runner/src/ValueObject/File.php
        # tests
        - packages/phpstan-extensions/tests/Rules/ClassMethod/Source/*
        - packages/easy-coding-standard/compiler/vendor/*

        # requires PHP 7.4
        - 'packages/easy-hydrator/tests/Fixture/TypedProperty.php'
        - 'packages/easy-hydrator/tests/TypedPropertiesTest.php'
        - '*/Source/*'
        - '*/Fixture/*'

    bootstrapFiles:
        - %currentWorkingDirectory%/tests/bootstrap.php
        - packages/easy-coding-standard/packages/changed-files-detector/tests/ChangedFilesDetectorSource/OneClass.php
        - packages/easy-coding-standard/tests/Finder/SourceFinderSource/Source/SomeClass.php

    ignoreErrors:
        # whole skipped rules
        - '#Function file_exists is unsafe to use, rely on Symfony component Filesystem\:\:exists instead#'

        # command argument value type conversion - known string
        -
            message: '#Cannot cast array<string>\|string\|null to string#'
            path: '*packages/*Command.php'

        # copied 3rd party magic
        -
            message: '#Use strict comparison instead of empty#'
            paths:
                - 'packages/package-builder/src/Yaml/ParametersMerger.php'

        -
            message: '#Instead of "SplFileInfo" use "Symplify\\SmartFileSystem\\SmartFileInfo"#'
            paths:
                - 'packages/smart-file-system/src/Finder/FinderSanitizer.php'
                - 'packages/smart-file-system/tests/Finder/FinderSanitizer/FinderSanitizerTest.php'
                - '*Fixer.php'

        -
            message: "#^Use explicit return value over magic &reference$#"
            paths:
                - packages/package-builder/src/Reflection/PrivatesCaller.php
                - packages/symfony-static-dumper/src/FileSystem/FilePathResolver.php

        # invalid 3rd party-code
        - '#Parameter \#1 \$index of method PhpCsFixer\\Tokenizer\\Tokens::getNextTokenOfKind\(\) expects int, int\|null given#'
        - '#Variable \$processedFileContent might not be defined#'

        # required for autowiring, since only interface is autowired
        - '#Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getParameterBag\(\)#'

        # intersect/union buggy
        - '#expects Symfony\\Component\\DependencyInjection\\ContainerBuilder, Symfony\\Component\\DependencyInjection\\ContainerInterface given#'

        # phpstan 0.10 news
        - '#Parameter \#1 \$path of function dirname expects string, string\|false given#'
        - '#Method Symplify\\PackageBuilder\\Console\\Command\\CommandNaming::getShortClassName\(\) should return string but returns string\|null#'
        - '#Cannot call method getStart\(\) on Symplify\\CodingStandard\\TokenRunner\\ValueObject\\BlockInfo\|null#'

        # mixed up iterables
        - '#PHPDoc tag @return with type array<string\> is incompatible with native type Iterator#'

        # Symfony 4.2 typehint BC-break
        - '#Parameter \#1 \$command of class Symfony\\Component\\Process\\Process constructor expects array, array<string>\|string given#'

        # false positive, known
        - '#Cannot cast array<string>\|bool\|string\|null to string#'
        - '#Cannot cast array<string>\|bool\|string\|null to int#'

        # console argument/option
        - '#Cannot cast array<string\>\|bool\|string to string#'

        # known values
        - '#Cannot call method (get|has)\(\) on (.*?)\|null#'
        - '#Static property Symplify\\PackageBuilder\\Tests\\AbstractKernelTestCase\:\:\$container \(Psr\\Container\\ContainerInterface\) does not accept object\|null#'
        - '#Call to an undefined method Psr\\Container\\ContainerInterface\:\:set\(\)#'
        - '#Static property Symplify\\PackageBuilder\\Tests\\AbstractKernelTestCase\:\:\$container \(Psr\\Container\\ContainerInterface\) does not accept null#'

        # false positive
        - '#Unreachable statement \- code above always terminates#'
        - '#Property Symplify\\Autodiscovery\\Tests\\Twig\\TwigPathAutodiscoveryTest\:\:\$twigFilesystemLoader \(Twig\\Loader\\FilesystemLoader\) does not accept Twig\\Loader\\LoaderInterface#'

        # false positive
        - '#Cannot assign offset \(int\|string\) to PhpCsFixer\\Tokenizer\\Tokens#'
        - '#Parameter \#1 \$subject of static method Nette\\Utils\\Strings\:\:match\(\) expects string, string\|false given#'

        # yield iterator
        - '#Parameter \#1 \$files of method Symplify\\SmartFileSystem\\Finder\\FinderSanitizer\:\:sanitize\(\) expects \(iterable<SplFileInfo\|string\>&Nette\\Utils\\Finder\)\|Symfony\\Component\\Finder\\Finder, array<int, SplFileInfo\> given#'
        - '#Call to an undefined method ReflectionType\:\:getName\(\)#'
        - '#Parameter \#1 \$argument of class ReflectionClass constructor expects class\-string<T of object\>\|T of object, string given#'

        # mixed by default, handled by coding standards
        - '#(has|with) no (return )?typehint specified#'
        - '#Offset (.*?) does not exist on array\|null#'
        - '#in iterable type#'

        - '#Strict comparison using \=\=\= between string\|false and null will always evaluate to false#'
        - '#Parameter \#1 \$jsonContent of method Symplify\\EasyCodingStandard\\Compiler\\Packagist\\SymplifyStableVersionProvider\:\:loadContentJsonStringToArray\(\) expects string, string\|false given#'
        - '#Method Symplify\\EasyCodingStandard\\Compiler\\Packagist\\SymplifyStableVersionProvider\:\:getLastKey\(\) should return string but returns int\|string\|null#'

        - '#Parameter \#1 \$array of method (.*?)\\ArraySorter\:\:recursiveSort\(\) expects array, array\|string given#'

        - '#Cannot assign offset (.*?) to array\|string#'
        - '#call_user_func#'

        - '#(.*?) of anonymous function has no typehint#'
        # false positive due to monorepo
        - '#Class (.*?) should be written with \:\:class notation, string found#'

        # the Filesystem method is only iterable way
        - '#Function file_exists is unsafe to use, rely on Symfony component Filesystem\:\:exists instead#'
        - '#Method Symplify\\CodingStandard\\CognitiveComplexity\\Tests\\AstCognitiveComplexityAnalyzer\\AstCognitiveComplexityAnalyzerTest\:\:parseFileToFistFunctionLike\(\) should return (.*?) but returns PhpParser\\Node\|null#'

        # cognitive complexity
        - '#Cognitive complexity for "Symplify\\ComposerJsonManipulator\\ValueObject\\ComposerJson::getJsonArray\(\)" is 14, keep it under 8#'
        - '#Cognitive complexity for "Symplify\\ComposerJsonManipulator\\ComposerJsonFactory::createFromArray\(\)" is 14, keep it under 8#'
        - '#Cognitive complexity for "Symplify\\PackageBuilder\\Yaml\\ParametersMerger::(.*?)\(\)" is \d+, keep it under 8#'

        - '#Parameter \#1 \$token of method Symplify\\CodingStandard\\TokenRunner\\Analyzer\\FixerAnalyzer\\BlockFinder\:\:getBlockTypeByToken\(\) expects PhpCsFixer\\Tokenizer\\Token, PhpCsFixer\\Tokenizer\\Token\|null given#'
        - '#Method Symplify\\ChangelogLinker\\Github\\GithubRepositoryFromRemoteResolver\:\:resolveFromUrl\(\) should return string but return statement is missing#'
        - '#Parameter \#1 \$path of function pathinfo expects string, string\|false\|null given#'

        # might be BC break
        - '#Class "CommandNaming" with static method must have "static" in its name#'
        - '#Class "InputDetector" with static method must have "static" in its name#'

        - '#Class with base "Error" name is already used in "PhpParser\\Node\\Expr\\Error", "PhpParser\\Error"\. Use unique name to make classes easy to recognize#'
        - '#Access to an undefined property PhpParser\\Node\\Expr\\Error(.*?)#'
        - '#Cannot cast PhpParser\\Node\\Expr\|string to string#'
        - '#Method Symplify\\MonorepoBuilder\\Release\\Tests\\ReleaseWorkerProvider\\ReleaseWorkerProviderTest\:\:loadConfigReleaseWorkerOrder\(\) should return array<string\> but returns array<int, int\|string\>#'

        - '#Cannot call method (.*?) on PhpCsFixer\\Tokenizer\\Token\|null#'
        - '#Parameter \#1 \$arr1 of function array_replace expects array, PhpCsFixer\\Tokenizer\\Token given#'

        - '#Cannot call method getSetFileInfo\(\) on Symplify\\SetConfigResolver\\ValueObject\\Set\|null#'
        - '#Cannot call method getRealPath\(\) on Symplify\\SmartFileSystem\\SmartFileInfo\|null#'
        - '#Parameter \#1 \$endPath of method Symfony\\Component\\Filesystem\\Filesystem\:\:makePathRelative\(\) expects string, string\|false given#'

        -
            message: '#Parameter \#1 \$haystack of static method Nette\\Utils\\Strings\:\:after\(\) expects string, string\|false given#'
            path: 'packages/monorepo-builder/packages/split/src/Command/SplitCommand.php'

        # optional CLI parameter
        -
            message: '#Parameter "stage" cannot be nullable#'
            paths:
                - 'packages/monorepo-builder/packages/release/src/Command/*'

        # inherited from Symfony class
        -
            message: '#Parameter "type" cannot have default value#'
            paths:
                 - 'packages/package-builder/src/DependencyInjection/FileLoader/ParameterMergingPhpFileLoader.php'
                 - 'packages/package-builder/src/Yaml/FileLoader/AbstractParameterMergingYamlFileLoader.php'

        # false positive
        - '#Property Symplify\\ChangelogLinker\\ChangelogDumper\:\:\$content is never written, only read#'
        - '#Property Symplify\\CodingStandard\\TokenRunner\\ValueObject\\Wrapper\\FixerWrapper\\ArrayWrapper\:\:\$array \(PhpParser\\Node\\Expr\\Array_\) does not accept PhpParser\\Node#'
        - '#Call to an undefined method PhpParser\\Node\\Expr\\Error\|PhpParser\\Node\\Identifier\:\:toString\(\)#'

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                # json array
                - *Json*

                # php scoper config array
                - */scoper.inc.php

                # Symfony API
                - packages/autodiscovery/src/Doctrine/DoctrineEntityMappingAutodiscoverer.php

        -
            message: '#Array destruct is not allowed\. Use value object to pass data instead#'
            paths:
                - packages/auto-bind-parameter/src/DependencyInjection/CompilerPass/AutoBindParameterCompilerPass.php
                - packages/autodiscovery/src/Yaml/YamlServiceProcessor.php

        -
            message: '#Use value object over return of values#'
            paths:
                # php scoper config array
                - */scoper.inc.php

                # Symfony API
                - packages/autodiscovery/src/Yaml/YamlServiceProcessor.php


        - '#Parameter \#1 \$argument of class ReflectionClass constructor expects class\-string<T of object\>\|T of object, string given#'
        # symfony console
        - '#Cannot cast array<string\>\|bool\|string\|null to string#'

        -
             message: '#Instead of "SplFileInfo" class/interface use "Symplify\\SmartFileSystem\\SmartFileInfo"#'
             paths:
                 - packages/smart-file-system/src/Finder/FinderSanitizer.php
                 - packages/smart-file-system/tests/Finder/FinderSanitizer/FinderSanitizerTest.php

        -
             message: '#Use value object over return of values#'
             paths:
                 - packages/autodiscovery/src/Yaml/YamlServiceProcessor.php
                 - packages/easy-coding-standard/compiler/build/scoper.inc.php
                 - packages/monorepo-builder/compiler/build/scoper.inc.php


        # 3rd party code
        -
            message: '#PHPDoc tag @return with type mixed is not subtype of native type array#'
            paths:
                - packages/autodiscovery/src/Yaml/YamlServiceProcessor.php
                - packages/package-builder/src/Http/BetterGuzzleClient.php

        - '#Parameter \#1 \$functionLike of method Symplify\\CodingStandard\\CognitiveComplexity\\AstCognitiveComplexityAnalyzer\:\:analyzeFunctionLike\(\) expects PhpParser\\Node\\Stmt\\ClassMethod\|PhpParser\\Node\\Stmt\\Function_, PhpParser\\Node\\Stmt\\ClassMethod\|PhpParser\\Node\\Stmt\\Function_\|null given#'

        -
            message: '#Method "__construct\(\)" is using too many parameters \- 9\. Make it under 8#'
            path: 'packages/easy-coding-standard/packages/fixer-runner/src/Application/FixerFileProcessor.php'

        -
            message: '#Too many public elements on class \- \d+\. Try narrow it down under \d+#'
            paths:
                # native PHP code
                - packages/smart-file-system/src/SmartFileInfo.php
                # complex stuff json
                - packages/composer-json-manipulator/src/ValueObject/ComposerJson.php
                - packages/easy-coding-standard/packages/configuration/src/Configuration.php

        -
            message: '#Class has too many properties \d+\. Try narrowing it down under \d+#'
            paths:
                # composer complex json
                - packages/composer-json-manipulator/src/ValueObject/ComposerJson.php

