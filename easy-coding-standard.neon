includes:
    - packages/EasyCodingStandard/config/php54-checkers.neon
    - packages/EasyCodingStandard/config/php70-checkers.neon
    - packages/EasyCodingStandard/config/php71-checkers.neon
    - packages/EasyCodingStandard/config/symfony-checkers.neon
    - packages/EasyCodingStandard/config/symplify-checkers.neon

checkers:
    # Slevomat
    - SlevomatCodingStandard\Sniffs\ControlStructures\DisallowEqualOperatorsSniff
    - SlevomatCodingStandard\Sniffs\ControlStructures\YodaComparisonSniff
    - SlevomatCodingStandard\Sniffs\Exceptions\DeadCatchSniff
    - SlevomatCodingStandard\Sniffs\Exceptions\ReferenceThrowableOnlySniff
    - SlevomatCodingStandard\Sniffs\Namespaces\ReferenceUsedNamesOnlySniff
    - SlevomatCodingStandard\Sniffs\Classes\UnusedPrivateElementsSniff

    # Files
    PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff:
        absoluteLineLimit: 120

    # PSR-4
    - PhpCsFixer\Fixer\Basic\Psr4Fixer

    # Code Analysis
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff:
        absoluteComplexity: 10
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff:
        absoluteNestingLevel: 5

    # Naming Conventions
    - PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\CamelCapsFunctionNameSniff

    # PHP
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\NonExecutableCodeSniff

    # WhiteSpace
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff:
        ignoreBlankLines: false

    # Namespaces
    - PhpCsFixer\Fixer\Import\OrderedImportsFixer

    PhpCsFixer\Fixer\Operator\ConcatSpaceFixer:
        spacing: one
    - PhpCsFixer\Fixer\ClassNotation\OrderedClassElementsFixer
    - PhpCsFixer\Fixer\LanguageConstruct\DirConstantFixer
    - PhpCsFixer\Fixer\CastNotation\ModernizeTypesCastingFixer
    - PhpCsFixer\Fixer\Semicolon\SemicolonAfterInstructionFixer
    - PhpCsFixer\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer
    - PhpCsFixer\Fixer\ControlStructure\NoUselessElseFixer
    - PhpCsFixer\Fixer\ReturnNotation\NoUselessReturnFixer
    - PhpCsFixer\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer
    - PhpCsFixer\Fixer\Strict\StrictComparisonFixer
    PhpCsFixer\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer:
        annotations:
            - author
            - throws
            - expectedException

    # PHPUnit
    - PhpCsFixer\Fixer\PhpUnit\PhpUnitStrictFixer

    # new since PhpCsFixer 2.2-2.4
    - PhpCsFixer\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer
    - PhpCsFixer\Fixer\LanguageConstruct\IsNullFixer
    - PhpCsFixer\Fixer\Basic\NonPrintableCharacterFixer
    - PhpCsFixer\Fixer\Phpdoc\PhpdocTypesOrderFixer
    - PhpCsFixer\Fixer\Comment\SingleLineCommentStyleFixer

parameters:
    exclude_checkers:
        # from PHP-CS-Fixer Symfony set
        - PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer
        - PhpCsFixer\Fixer\Operator\NewWithBracesFixer
        - PhpCsFixer\Fixer\Phpdoc\PhpdocAlignFixer
        - PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer

    skip:
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff:
            - *packages/CodingStandard/src/Sniffs/*/*Sniff.php
            - packages/EasyCodingStandard/packages/SniffRunner/src/File/File.php
            - packages/Statie/packages/FlatWhite/src/Latte/DynamicStringLoader.php
            - packages/Statie/src/Configuration/Configuration.php
            - packages/SymbioticController/src/Adapter/Nette/Application/PresenterFactory.php
            - packages/SymbioticController/src/Adapter/Nette/Application/PresenterHelper.php

        Symplify\CodingStandard\Sniffs\Classes\EqualInterfaceImplementationSniff:
            - packages/EasyCodingStandard/packages/SniffRunner/src/Application/SniffFileProcessor.php
            - packages/EasyCodingStandard/packages/FixerRunner/src/Application/FixerFileProcessor.php

        PhpCsFixer\Fixer\PhpUnit\PhpUnitStrictFixer:
            - packages/EasyCodingStandard/tests/Indentation/IndentationTest.php

        PhpCsFixer\Fixer\Semicolon\SpaceAfterSemicolonFixer:
            # bugged fixer
            - packages/CodingStandard/src/Fixer/DependencyInjection/InjectToConstructorInjectionFixer.php

        Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer:
            # optional package, interface might not exist
            - packages/CodingStandard/src/Sniffs/Classes/EqualInterfaceImplementationSniff.php
            # "Exception" is string part of the name
            - packages/CodingStandard/src/Sniffs/Naming/ExceptionNameSniff.php
            - packages/CodingStandard/src/Fixer/Naming/ExceptionNameFixer.php
            # "Error" is a name of Presenter
            - packages/SymbioticController/tests/Adapter/Nette/Application/PresenterFactoryTest.php
            # class is only for tested cases, it doesn't exist
            - packages/SymbioticController/tests/Adapter/Nette/Routing/PresenterMapperTest.php
